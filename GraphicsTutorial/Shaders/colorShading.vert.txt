#version 130

//input data from the VBO
in vec2 vertexPosition;
in vec4 vertexColor;
in vec2 vertexUV;

//output to the fragment shader
out vec4 fragmentColor;
out vec2 fragmentPosition;
out vec2 fragmentUV;

uniform mat4 P;

void main(){
	//sets x and y
	gl_Position.xy = (P * vec4(vertexPosition, 0.0, 1.0)).xy;
	
	//2-D, set z to zero
	gl_Position.z = 0.0;
	
	//normalized coor
	gl_Position.w = 1.0;
	
	
	fragmentColor = vertexColor;
	fragmentPosition = vertexPosition;
	fragmentUV = vec2(vertexUV.x, 1.0 - vertexUV.y);
}